{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-21T01:52:39.471Z",
    "end": "2024-06-21T01:52:43.382Z",
    "duration": 3911,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "230292db-46ae-444f-b5e1-d5e7039578ca",
      "title": "",
      "fullFile": "C:\\Users\\Yusuf\\Documents\\HAQIM\\Bootcamp QA\\QA\\api_automation_ds4\\test\\api-test.js",
      "file": "\\test\\api-test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d8adcf0e-a72f-4323-b9d3-4969547514f9",
          "title": "reqres.in API Test",
          "fullFile": "C:\\Users\\Yusuf\\Documents\\HAQIM\\Bootcamp QA\\QA\\api_automation_ds4\\test\\api-test.js",
          "file": "\\test\\api-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC1 - GET Single User",
              "fullTitle": "reqres.in API Test TC1 - GET Single User",
              "timedOut": false,
              "duration": 1066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const schema = JSON.parse(fs.readFileSync(\"resource/schema/get_single_user_schema.json\", 'utf8'));\nconst response = await supertest(baseURL)\n    .get(\"/users/2\");\nconsole.log(response.body);\nexpect(response.status).to.equal(200)\nexpect(response.body.data.id).to.equal(2)\nexpect(response.body).to.be.jsonSchema(schema)",
              "err": {},
              "uuid": "fd0cbb38-db42-4902-b623-71627e4fac17",
              "parentUUID": "d8adcf0e-a72f-4323-b9d3-4969547514f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC2 - POST Object",
              "fullTitle": "reqres.in API Test TC2 - POST Object",
              "timedOut": false,
              "duration": 723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const schema = JSON.parse(fs.readFileSync(\"resource/schema/post_create_schema.json\", 'utf8'));\nconst postData = {\n    name: \"Haqim\",\n    job: \"peserta bootcamp\"\n};\nconst response = await supertest(baseURL)\n    .post(\"/users\")\n    .send(postData)\n    .set('Accept', 'application/json');\nconst responseBody = response.body;\nconsole.log(responseBody);\n\nexpect(responseBody).to.have.property('name').eql(postData.name);\nexpect(responseBody).to.have.property('job').eql(postData.job);\nexpect(response.status).to.be.oneOf([201, 202]);\nexpect(responseBody).to.be.jsonSchema(schema);",
              "err": {},
              "uuid": "2d71c95a-4d54-4a3e-86d0-1f52d9287714",
              "parentUUID": "d8adcf0e-a72f-4323-b9d3-4969547514f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC3 - PUT Update Object",
              "fullTitle": "reqres.in API Test TC3 - PUT Update Object",
              "timedOut": false,
              "duration": 1199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const schema = JSON.parse(fs.readFileSync(\"resource/schema/put_update_schema.json\", 'utf8'));\nconst putData = {\n    name: \"Haqim update\",\n    job: \"quality update\"\n};\nconst response = await supertest(baseURL)\n    .put(\"/users/2\")\n    .send(putData)\n    .set('Accept', 'application/json');\nconst responseBody = response.body;\nconsole.log(responseBody);\n\nexpect(responseBody).to.have.property('name').eql(putData.name);\nexpect(responseBody).to.have.property('job').eql(putData.job);\nexpect(response.status).to.equal(200);\nexpect(responseBody).to.be.jsonSchema(schema);",
              "err": {},
              "uuid": "b6d0ae20-3fd9-4978-90fe-9d713370f186",
              "parentUUID": "d8adcf0e-a72f-4323-b9d3-4969547514f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC4 - DELETE User",
              "fullTitle": "reqres.in API Test TC4 - DELETE User",
              "timedOut": false,
              "duration": 912,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await supertest(baseURL)\n    .delete(\"/users/2\")\n    .set('Accept', 'application/json');\nexpect(response.status).to.equal(204);",
              "err": {},
              "uuid": "0a367470-316a-49f2-9b16-e16333e756b5",
              "parentUUID": "d8adcf0e-a72f-4323-b9d3-4969547514f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd0cbb38-db42-4902-b623-71627e4fac17",
            "2d71c95a-4d54-4a3e-86d0-1f52d9287714",
            "b6d0ae20-3fd9-4978-90fe-9d713370f186",
            "0a367470-316a-49f2-9b16-e16333e756b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[status]_[datetime]-[name]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report-digitalskola",
        "reportFilename": "[status]_[datetime]-[name]-report",
        "html": "true",
        "json": "true",
        "overwrite": "false",
        "timestamp": "longDate"
      },
      "version": "6.2.0"
    }
  }
}